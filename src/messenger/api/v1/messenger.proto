syntax = "proto3";

package v1;

message TypedMessage {
  string type = 1;
  bytes value = 2;
}

message SignedMessage {
  TypedMessage message = 1;
  string signature = 2;
}

message GetRSAPublicKeyRequest {
}

message GetRSAPublicKeyResponse {
  string key = 1;
}

message GetDHParametersRequest {
}

message GetDHParametersResponse {
  string p = 1;
  int32 g = 2;
  string q = 3;
}

message GetDHPublicKeyRequest {
}

message GetDHPublicKeyResponse {
  string y = 1;
}

message RegisterRequest {
  string id = 1;
  string password_ciphertext = 2;
}

message RegisterResponse {
}

message LoginRequest {
  string id = 1;
  string password_ciphertext = 2;
  string dh_public_key_y = 3;
}

message LoginResponse {
}

message EchoMessage {
  string message = 1;
}

message ListOnlineUsersRequest {
}

message ListOnlineUsersResponse {
  repeated string user_ids = 1;
}

message ChatRequestFromClient {
  string requestee = 1;
}

message ChatRequestFromServer {
  string request_id = 1;
  string requester = 2;
  string dh_public_key_y = 3;
}

message ChatRequestFromServerResponse {
  string request_id = 1;
  bool accepted = 2;
}

message ChatRequestFromClientResponse {
  bool accepted = 1;
  oneof result {
    string error = 2;
    string dh_public_key_y = 3;
  }
}

service MessengerService {
  rpc GetRSAPublicKey(GetRSAPublicKeyRequest) returns (GetRSAPublicKeyResponse);

  rpc GetDHParameters(GetDHParametersRequest) returns (SignedMessage);

  rpc GetDHPublicKey(GetDHPublicKeyRequest) returns (SignedMessage);

  rpc Register(RegisterRequest) returns (RegisterResponse);

  rpc StartSession(stream TypedMessage) returns (stream SignedMessage);
}
